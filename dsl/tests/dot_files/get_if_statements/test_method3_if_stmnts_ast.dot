digraph "methodWithIfs" {  
"1000101" [label = "(METHOD,methodWithIfs)" ]
"1000102" [label = "(PARAM,this)" ]
"1000103" [label = "(PARAM,List<Integer> list)" ]
"1000104" [label = "(BLOCK,<empty>,<empty>)" ]
"1000105" [label = "(LOCAL,String a: java.lang.String)" ]
"1000106" [label = "(<operator>.assignment,a = new String(\"myString\"))" ]
"1000107" [label = "(IDENTIFIER,a,a = new String(\"myString\"))" ]
"1000108" [label = "(<operator>.alloc,new String(\"myString\"))" ]
"1000109" [label = "(<init>,new String(\"myString\"))" ]
"1000110" [label = "(IDENTIFIER,a,new String(\"myString\"))" ]
"1000111" [label = "(LITERAL,\"myString\",new String(\"myString\"))" ]
"1000112" [label = "(LOCAL,int a_var: int)" ]
"1000113" [label = "(<operator>.assignment,a_var = 5)" ]
"1000114" [label = "(IDENTIFIER,a_var,a_var = 5)" ]
"1000115" [label = "(LITERAL,5,a_var = 5)" ]
"1000116" [label = "(LOCAL,boolean b_var: boolean)" ]
"1000117" [label = "(<operator>.assignment,b_var = true)" ]
"1000118" [label = "(IDENTIFIER,b_var,b_var = true)" ]
"1000119" [label = "(LITERAL,true,b_var = true)" ]
"1000120" [label = "(LOCAL,char c_var: char)" ]
"1000121" [label = "(<operator>.assignment,c_var = 'c')" ]
"1000122" [label = "(IDENTIFIER,c_var,c_var = 'c')" ]
"1000123" [label = "(LITERAL,'c',c_var = 'c')" ]
"1000124" [label = "(CONTROL_STRUCTURE,if ((a_var < (int) c_var) && (!b_var || c_var > 'a')),if ((a_var < (int) c_var) && (!b_var || c_var > 'a')))" ]
"1000125" [label = "(<operator>.logicalAnd,(a_var < (int) c_var) && (!b_var || c_var > 'a'))" ]
"1000126" [label = "(<operator>.lessThan,a_var < (int) c_var)" ]
"1000127" [label = "(IDENTIFIER,a_var,a_var < (int) c_var)" ]
"1000128" [label = "(<operator>.cast,(int) c_var)" ]
"1000129" [label = "(TYPE_REF,int,int)" ]
"1000130" [label = "(IDENTIFIER,c_var,(int) c_var)" ]
"1000131" [label = "(<operator>.logicalOr,!b_var || c_var > 'a')" ]
"1000132" [label = "(<operator>.logicalNot,!b_var)" ]
"1000133" [label = "(IDENTIFIER,b_var,!b_var)" ]
"1000134" [label = "(<operator>.greaterThan,c_var > 'a')" ]
"1000135" [label = "(IDENTIFIER,c_var,c_var > 'a')" ]
"1000136" [label = "(LITERAL,'a',c_var > 'a')" ]
"1000137" [label = "(RETURN,return a.concat(\"_anotherString\");,return a.concat(\"_anotherString\");)" ]
"1000138" [label = "(concat,a.concat(\"_anotherString\"))" ]
"1000139" [label = "(IDENTIFIER,a,a.concat(\"_anotherString\"))" ]
"1000140" [label = "(LITERAL,\"_anotherString\",a.concat(\"_anotherString\"))" ]
"1000141" [label = "(RETURN,return a;,return a;)" ]
"1000142" [label = "(IDENTIFIER,a,return a;)" ]
"1000143" [label = "(METHOD_RETURN,java.lang.String)" ]
  "1000101" -> "1000102"  [ label = "AST: "] 
  "1000101" -> "1000103"  [ label = "AST: "] 
  "1000101" -> "1000104"  [ label = "AST: "] 
  "1000101" -> "1000143"  [ label = "AST: "] 
  "1000104" -> "1000105"  [ label = "AST: "] 
  "1000104" -> "1000106"  [ label = "AST: "] 
  "1000104" -> "1000109"  [ label = "AST: "] 
  "1000104" -> "1000112"  [ label = "AST: "] 
  "1000104" -> "1000113"  [ label = "AST: "] 
  "1000104" -> "1000116"  [ label = "AST: "] 
  "1000104" -> "1000117"  [ label = "AST: "] 
  "1000104" -> "1000120"  [ label = "AST: "] 
  "1000104" -> "1000121"  [ label = "AST: "] 
  "1000104" -> "1000124"  [ label = "AST: "] 
  "1000104" -> "1000141"  [ label = "AST: "] 
  "1000106" -> "1000107"  [ label = "AST: "] 
  "1000106" -> "1000108"  [ label = "AST: "] 
  "1000109" -> "1000110"  [ label = "AST: "] 
  "1000109" -> "1000111"  [ label = "AST: "] 
  "1000113" -> "1000114"  [ label = "AST: "] 
  "1000113" -> "1000115"  [ label = "AST: "] 
  "1000117" -> "1000118"  [ label = "AST: "] 
  "1000117" -> "1000119"  [ label = "AST: "] 
  "1000121" -> "1000122"  [ label = "AST: "] 
  "1000121" -> "1000123"  [ label = "AST: "] 
  "1000124" -> "1000125"  [ label = "AST: "] 
  "1000124" -> "1000137"  [ label = "AST: "] 
  "1000125" -> "1000126"  [ label = "AST: "] 
  "1000125" -> "1000131"  [ label = "AST: "] 
  "1000126" -> "1000127"  [ label = "AST: "] 
  "1000126" -> "1000128"  [ label = "AST: "] 
  "1000128" -> "1000129"  [ label = "AST: "] 
  "1000128" -> "1000130"  [ label = "AST: "] 
  "1000131" -> "1000132"  [ label = "AST: "] 
  "1000131" -> "1000134"  [ label = "AST: "] 
  "1000132" -> "1000133"  [ label = "AST: "] 
  "1000134" -> "1000135"  [ label = "AST: "] 
  "1000134" -> "1000136"  [ label = "AST: "] 
  "1000137" -> "1000138"  [ label = "AST: "] 
  "1000138" -> "1000139"  [ label = "AST: "] 
  "1000138" -> "1000140"  [ label = "AST: "] 
  "1000141" -> "1000142"  [ label = "AST: "] 
}
