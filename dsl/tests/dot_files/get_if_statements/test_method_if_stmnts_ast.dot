digraph "ifStatments" {  
"1000101" [label = "(METHOD,ifStatments)" ]
"1000102" [label = "(PARAM,this)" ]
"1000103" [label = "(PARAM,char[] abc)" ]
"1000104" [label = "(PARAM,boolean[] b_arr)" ]
"1000105" [label = "(PARAM,String str)" ]
"1000106" [label = "(BLOCK,<empty>,<empty>)" ]
"1000107" [label = "(LOCAL,int a: int)" ]
"1000108" [label = "(<operator>.assignment,a = 4)" ]
"1000109" [label = "(IDENTIFIER,a,a = 4)" ]
"1000110" [label = "(LITERAL,4,a = 4)" ]
"1000111" [label = "(CONTROL_STRUCTURE,if (a > 2),if (a > 2))" ]
"1000112" [label = "(<operator>.greaterThan,a > 2)" ]
"1000113" [label = "(IDENTIFIER,a,a > 2)" ]
"1000114" [label = "(LITERAL,2,a > 2)" ]
"1000115" [label = "(BLOCK,<empty>,<empty>)" ]
"1000116" [label = "(LOCAL,int b: int)" ]
"1000117" [label = "(<operator>.assignment,b = 4)" ]
"1000118" [label = "(IDENTIFIER,b,b = 4)" ]
"1000119" [label = "(LITERAL,4,b = 4)" ]
"1000120" [label = "(<operators>.assignmentXor,b ^= a + 1)" ]
"1000121" [label = "(IDENTIFIER,b,b ^= a + 1)" ]
"1000122" [label = "(<operator>.addition,a + 1)" ]
"1000123" [label = "(IDENTIFIER,a,a + 1)" ]
"1000124" [label = "(LITERAL,1,a + 1)" ]
"1000125" [label = "(println,System.out.println(\"Two!\"))" ]
"1000126" [label = "(IDENTIFIER,System.out,System.out.println(\"Two!\"))" ]
"1000127" [label = "(LITERAL,\"Two!\",System.out.println(\"Two!\"))" ]
"1000128" [label = "(CONTROL_STRUCTURE,if (b < 5),if (b < 5))" ]
"1000129" [label = "(<operator>.lessThan,b < 5)" ]
"1000130" [label = "(IDENTIFIER,b,b < 5)" ]
"1000131" [label = "(LITERAL,5,b < 5)" ]
"1000132" [label = "(BLOCK,<empty>,<empty>)" ]
"1000133" [label = "(println,System.out.println(\"Within B\"))" ]
"1000134" [label = "(IDENTIFIER,System.out,System.out.println(\"Within B\"))" ]
"1000135" [label = "(LITERAL,\"Within B\",System.out.println(\"Within B\"))" ]
"1000136" [label = "(CONTROL_STRUCTURE,if (a < 5),if (a < 5))" ]
"1000137" [label = "(<operator>.lessThan,a < 5)" ]
"1000138" [label = "(IDENTIFIER,a,a < 5)" ]
"1000139" [label = "(LITERAL,5,a < 5)" ]
"1000140" [label = "(BLOCK,<empty>,<empty>)" ]
"1000141" [label = "(LOCAL,int b: int)" ]
"1000142" [label = "(<operator>.assignment,b = 40)" ]
"1000143" [label = "(IDENTIFIER,b,b = 40)" ]
"1000144" [label = "(LITERAL,40,b = 40)" ]
"1000145" [label = "(<operators>.assignmentXor,b ^= a + 7)" ]
"1000146" [label = "(IDENTIFIER,b,b ^= a + 7)" ]
"1000147" [label = "(<operator>.addition,a + 7)" ]
"1000148" [label = "(IDENTIFIER,a,a + 7)" ]
"1000149" [label = "(LITERAL,7,a + 7)" ]
"1000150" [label = "(println,System.out.println(\"Five!\"))" ]
"1000151" [label = "(IDENTIFIER,System.out,System.out.println(\"Five!\"))" ]
"1000152" [label = "(LITERAL,\"Five!\",System.out.println(\"Five!\"))" ]
"1000153" [label = "(CONTROL_STRUCTURE,if (b < 52),if (b < 52))" ]
"1000154" [label = "(<operator>.lessThan,b < 52)" ]
"1000155" [label = "(IDENTIFIER,b,b < 52)" ]
"1000156" [label = "(LITERAL,52,b < 52)" ]
"1000157" [label = "(BLOCK,<empty>,<empty>)" ]
"1000158" [label = "(println,System.out.println(\"Within B again\"))" ]
"1000159" [label = "(IDENTIFIER,System.out,System.out.println(\"Within B again\"))" ]
"1000160" [label = "(LITERAL,\"Within B again\",System.out.println(\"Within B again\"))" ]
"1000161" [label = "(RETURN,return false;,return false;)" ]
"1000162" [label = "(LITERAL,false,return false;)" ]
"1000163" [label = "(METHOD_RETURN,boolean)" ]
  "1000101" -> "1000102"  [ label = "AST: "] 
  "1000101" -> "1000103"  [ label = "AST: "] 
  "1000101" -> "1000104"  [ label = "AST: "] 
  "1000101" -> "1000105"  [ label = "AST: "] 
  "1000101" -> "1000106"  [ label = "AST: "] 
  "1000101" -> "1000163"  [ label = "AST: "] 
  "1000106" -> "1000107"  [ label = "AST: "] 
  "1000106" -> "1000108"  [ label = "AST: "] 
  "1000106" -> "1000111"  [ label = "AST: "] 
  "1000106" -> "1000136"  [ label = "AST: "] 
  "1000106" -> "1000161"  [ label = "AST: "] 
  "1000108" -> "1000109"  [ label = "AST: "] 
  "1000108" -> "1000110"  [ label = "AST: "] 
  "1000111" -> "1000112"  [ label = "AST: "] 
  "1000111" -> "1000115"  [ label = "AST: "] 
  "1000112" -> "1000113"  [ label = "AST: "] 
  "1000112" -> "1000114"  [ label = "AST: "] 
  "1000115" -> "1000116"  [ label = "AST: "] 
  "1000115" -> "1000117"  [ label = "AST: "] 
  "1000115" -> "1000120"  [ label = "AST: "] 
  "1000115" -> "1000125"  [ label = "AST: "] 
  "1000115" -> "1000128"  [ label = "AST: "] 
  "1000117" -> "1000118"  [ label = "AST: "] 
  "1000117" -> "1000119"  [ label = "AST: "] 
  "1000120" -> "1000121"  [ label = "AST: "] 
  "1000120" -> "1000122"  [ label = "AST: "] 
  "1000122" -> "1000123"  [ label = "AST: "] 
  "1000122" -> "1000124"  [ label = "AST: "] 
  "1000125" -> "1000126"  [ label = "AST: "] 
  "1000125" -> "1000127"  [ label = "AST: "] 
  "1000128" -> "1000129"  [ label = "AST: "] 
  "1000128" -> "1000132"  [ label = "AST: "] 
  "1000129" -> "1000130"  [ label = "AST: "] 
  "1000129" -> "1000131"  [ label = "AST: "] 
  "1000132" -> "1000133"  [ label = "AST: "] 
  "1000133" -> "1000134"  [ label = "AST: "] 
  "1000133" -> "1000135"  [ label = "AST: "] 
  "1000136" -> "1000137"  [ label = "AST: "] 
  "1000136" -> "1000140"  [ label = "AST: "] 
  "1000137" -> "1000138"  [ label = "AST: "] 
  "1000137" -> "1000139"  [ label = "AST: "] 
  "1000140" -> "1000141"  [ label = "AST: "] 
  "1000140" -> "1000142"  [ label = "AST: "] 
  "1000140" -> "1000145"  [ label = "AST: "] 
  "1000140" -> "1000150"  [ label = "AST: "] 
  "1000140" -> "1000153"  [ label = "AST: "] 
  "1000142" -> "1000143"  [ label = "AST: "] 
  "1000142" -> "1000144"  [ label = "AST: "] 
  "1000145" -> "1000146"  [ label = "AST: "] 
  "1000145" -> "1000147"  [ label = "AST: "] 
  "1000147" -> "1000148"  [ label = "AST: "] 
  "1000147" -> "1000149"  [ label = "AST: "] 
  "1000150" -> "1000151"  [ label = "AST: "] 
  "1000150" -> "1000152"  [ label = "AST: "] 
  "1000153" -> "1000154"  [ label = "AST: "] 
  "1000153" -> "1000157"  [ label = "AST: "] 
  "1000154" -> "1000155"  [ label = "AST: "] 
  "1000154" -> "1000156"  [ label = "AST: "] 
  "1000157" -> "1000158"  [ label = "AST: "] 
  "1000158" -> "1000159"  [ label = "AST: "] 
  "1000158" -> "1000160"  [ label = "AST: "] 
  "1000161" -> "1000162"  [ label = "AST: "] 
}
