digraph "testMethod" {  
"1000101" [label = "(METHOD,testMethod)" ]
"1000102" [label = "(PARAM,this)" ]
"1000103" [label = "(PARAM,int a)" ]
"1000104" [label = "(BLOCK,<empty>,<empty>)" ]
"1000105" [label = "(LOCAL,int k: int)" ]
"1000106" [label = "(<operator>.assignment,k = 2)" ]
"1000107" [label = "(IDENTIFIER,k,k = 2)" ]
"1000108" [label = "(LITERAL,2,k = 2)" ]
"1000109" [label = "(LOCAL,int p: int)" ]
"1000110" [label = "(<operator>.assignment,p = 3)" ]
"1000111" [label = "(IDENTIFIER,p,p = 3)" ]
"1000112" [label = "(LITERAL,3,p = 3)" ]
"1000113" [label = "(LOCAL,int result: int)" ]
"1000114" [label = "(<operator>.assignment,result = k + p + 3 * a)" ]
"1000115" [label = "(IDENTIFIER,result,result = k + p + 3 * a)" ]
"1000116" [label = "(<operator>.addition,k + p + 3 * a)" ]
"1000117" [label = "(<operator>.addition,k + p)" ]
"1000118" [label = "(IDENTIFIER,k,k + p)" ]
"1000119" [label = "(IDENTIFIER,p,k + p)" ]
"1000120" [label = "(<operator>.multiplication,3 * a)" ]
"1000121" [label = "(LITERAL,3,3 * a)" ]
"1000122" [label = "(IDENTIFIER,a,3 * a)" ]
"1000123" [label = "(<operator>.assignmentPlus,k += result & (p + k + a))" ]
"1000124" [label = "(IDENTIFIER,k,k += result & (p + k + a))" ]
"1000125" [label = "(<operator>.and,result & (p + k + a))" ]
"1000126" [label = "(IDENTIFIER,result,result & (p + k + a))" ]
"1000127" [label = "(<operator>.addition,p + k + a)" ]
"1000128" [label = "(<operator>.addition,p + k)" ]
"1000129" [label = "(IDENTIFIER,p,p + k)" ]
"1000130" [label = "(IDENTIFIER,k,p + k)" ]
"1000131" [label = "(IDENTIFIER,a,p + k + a)" ]
"1000132" [label = "(RETURN,return \"foo\";,return \"foo\";)" ]
"1000133" [label = "(LITERAL,\"foo\",return \"foo\";)" ]
"1000134" [label = "(METHOD_RETURN,java.lang.String)" ]
  "1000101" -> "1000102"  [ label = "AST: "] 
  "1000101" -> "1000103"  [ label = "AST: "] 
  "1000101" -> "1000104"  [ label = "AST: "] 
  "1000101" -> "1000134"  [ label = "AST: "] 
  "1000104" -> "1000105"  [ label = "AST: "] 
  "1000104" -> "1000106"  [ label = "AST: "] 
  "1000104" -> "1000109"  [ label = "AST: "] 
  "1000104" -> "1000110"  [ label = "AST: "] 
  "1000104" -> "1000113"  [ label = "AST: "] 
  "1000104" -> "1000114"  [ label = "AST: "] 
  "1000104" -> "1000123"  [ label = "AST: "] 
  "1000104" -> "1000132"  [ label = "AST: "] 
  "1000106" -> "1000107"  [ label = "AST: "] 
  "1000106" -> "1000108"  [ label = "AST: "] 
  "1000110" -> "1000111"  [ label = "AST: "] 
  "1000110" -> "1000112"  [ label = "AST: "] 
  "1000114" -> "1000115"  [ label = "AST: "] 
  "1000114" -> "1000116"  [ label = "AST: "] 
  "1000116" -> "1000117"  [ label = "AST: "] 
  "1000116" -> "1000120"  [ label = "AST: "] 
  "1000117" -> "1000118"  [ label = "AST: "] 
  "1000117" -> "1000119"  [ label = "AST: "] 
  "1000120" -> "1000121"  [ label = "AST: "] 
  "1000120" -> "1000122"  [ label = "AST: "] 
  "1000123" -> "1000124"  [ label = "AST: "] 
  "1000123" -> "1000125"  [ label = "AST: "] 
  "1000125" -> "1000126"  [ label = "AST: "] 
  "1000125" -> "1000127"  [ label = "AST: "] 
  "1000127" -> "1000128"  [ label = "AST: "] 
  "1000127" -> "1000131"  [ label = "AST: "] 
  "1000128" -> "1000129"  [ label = "AST: "] 
  "1000128" -> "1000130"  [ label = "AST: "] 
  "1000132" -> "1000133"  [ label = "AST: "] 
}
