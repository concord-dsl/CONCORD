digraph "ifElseMethod" {  
"1000143" [label = "(METHOD,ifElseMethod)" ]
"1000144" [label = "(PARAM,this)" ]
"1000145" [label = "(PARAM,char[] chars)" ]
"1000146" [label = "(BLOCK,<empty>,<empty>)" ]
"1000147" [label = "(LOCAL,char target: char)" ]
"1000148" [label = "(<operator>.assignment,target = 'c')" ]
"1000149" [label = "(IDENTIFIER,target,target = 'c')" ]
"1000150" [label = "(LITERAL,'c',target = 'c')" ]
"1000151" [label = "(LOCAL,char replace: char)" ]
"1000152" [label = "(<operator>.assignment,replace = 'd')" ]
"1000153" [label = "(IDENTIFIER,replace,replace = 'd')" ]
"1000154" [label = "(LITERAL,'d',replace = 'd')" ]
"1000155" [label = "(CONTROL_STRUCTURE,if (chars[0] == target),if (chars[0] == target))" ]
"1000156" [label = "(<operator>.equals,chars[0] == target)" ]
"1000157" [label = "(<operator>.indexAccess,chars[0])" ]
"1000158" [label = "(IDENTIFIER,chars,chars[0] == target)" ]
"1000159" [label = "(LITERAL,0,chars[0] == target)" ]
"1000160" [label = "(IDENTIFIER,target,chars[0] == target)" ]
"1000161" [label = "(BLOCK,<empty>,<empty>)" ]
"1000162" [label = "(<operator>.assignment,chars[1] = replace)" ]
"1000163" [label = "(<operator>.indexAccess,chars[1])" ]
"1000164" [label = "(IDENTIFIER,chars,chars[1] = replace)" ]
"1000165" [label = "(LITERAL,1,chars[1] = replace)" ]
"1000166" [label = "(IDENTIFIER,replace,chars[1] = replace)" ]
"1000167" [label = "(<operator>.assignment,target = 'd')" ]
"1000168" [label = "(IDENTIFIER,target,target = 'd')" ]
"1000169" [label = "(LITERAL,'d',target = 'd')" ]
"1000170" [label = "(<operator>.assignment,replace = 'e')" ]
"1000171" [label = "(IDENTIFIER,replace,replace = 'e')" ]
"1000172" [label = "(LITERAL,'e',replace = 'e')" ]
"1000173" [label = "(CONTROL_STRUCTURE,else,else)" ]
"1000174" [label = "(BLOCK,<empty>,<empty>)" ]
"1000175" [label = "(<operator>.assignment,target = '\n')" ]
"1000176" [label = "(IDENTIFIER,target,target = '\n')" ]
"1000177" [label = "(LITERAL,'\n',target = '\n')" ]
"1000178" [label = "(<operator>.assignment,replace = 48)" ]
"1000179" [label = "(IDENTIFIER,replace,replace = 48)" ]
"1000180" [label = "(LITERAL,48,replace = 48)" ]
"1000181" [label = "(CONTROL_STRUCTURE,if (chars[45] == replace),if (chars[45] == replace))" ]
"1000182" [label = "(<operator>.equals,chars[45] == replace)" ]
"1000183" [label = "(<operator>.indexAccess,chars[45])" ]
"1000184" [label = "(IDENTIFIER,chars,chars[45] == replace)" ]
"1000185" [label = "(LITERAL,45,chars[45] == replace)" ]
"1000186" [label = "(IDENTIFIER,replace,chars[45] == replace)" ]
"1000187" [label = "(BLOCK,<empty>,<empty>)" ]
"1000188" [label = "(<operator>.assignment,chars[1] = target)" ]
"1000189" [label = "(<operator>.indexAccess,chars[1])" ]
"1000190" [label = "(IDENTIFIER,chars,chars[1] = target)" ]
"1000191" [label = "(LITERAL,1,chars[1] = target)" ]
"1000192" [label = "(IDENTIFIER,target,chars[1] = target)" ]
"1000193" [label = "(<operator>.assignment,target = 'd')" ]
"1000194" [label = "(IDENTIFIER,target,target = 'd')" ]
"1000195" [label = "(LITERAL,'d',target = 'd')" ]
"1000196" [label = "(<operator>.assignment,replace = 'e')" ]
"1000197" [label = "(IDENTIFIER,replace,replace = 'e')" ]
"1000198" [label = "(LITERAL,'e',replace = 'e')" ]
"1000199" [label = "(RETURN,return new String(\"returned!\");,return new String(\"returned!\");)" ]
"1000200" [label = "(BLOCK,<empty>,<empty>)" ]
"1000201" [label = "(<operator>.assignment,<empty>)" ]
"1000202" [label = "(IDENTIFIER,$obj0,<empty>)" ]
"1000203" [label = "(<operator>.alloc,new String(\"returned!\"))" ]
"1000204" [label = "(<init>,new String(\"returned!\"))" ]
"1000205" [label = "(IDENTIFIER,$obj0,new String(\"returned!\"))" ]
"1000206" [label = "(LITERAL,\"returned!\",new String(\"returned!\"))" ]
"1000207" [label = "(IDENTIFIER,$obj0,<empty>)" ]
"1000208" [label = "(CONTROL_STRUCTURE,else,else)" ]
"1000209" [label = "(BLOCK,<empty>,<empty>)" ]
"1000210" [label = "(<operator>.assignment,target = '\n')" ]
"1000211" [label = "(IDENTIFIER,target,target = '\n')" ]
"1000212" [label = "(LITERAL,'\n',target = '\n')" ]
"1000213" [label = "(<operator>.assignment,replace = 48)" ]
"1000214" [label = "(IDENTIFIER,replace,replace = 48)" ]
"1000215" [label = "(LITERAL,48,replace = 48)" ]
"1000216" [label = "(RETURN,return new String(chars);,return new String(chars);)" ]
"1000217" [label = "(BLOCK,<empty>,<empty>)" ]
"1000218" [label = "(<operator>.assignment,<empty>)" ]
"1000219" [label = "(IDENTIFIER,$obj1,<empty>)" ]
"1000220" [label = "(<operator>.alloc,new String(chars))" ]
"1000221" [label = "(<init>,new String(chars))" ]
"1000222" [label = "(IDENTIFIER,$obj1,new String(chars))" ]
"1000223" [label = "(IDENTIFIER,chars,new String(chars))" ]
"1000224" [label = "(IDENTIFIER,$obj1,<empty>)" ]
"1000225" [label = "(METHOD_RETURN,java.lang.String)" ]
  "1000143" -> "1000144"  [ label = "AST: "] 
  "1000143" -> "1000145"  [ label = "AST: "] 
  "1000143" -> "1000146"  [ label = "AST: "] 
  "1000143" -> "1000225"  [ label = "AST: "] 
  "1000146" -> "1000147"  [ label = "AST: "] 
  "1000146" -> "1000148"  [ label = "AST: "] 
  "1000146" -> "1000151"  [ label = "AST: "] 
  "1000146" -> "1000152"  [ label = "AST: "] 
  "1000146" -> "1000155"  [ label = "AST: "] 
  "1000146" -> "1000181"  [ label = "AST: "] 
  "1000146" -> "1000216"  [ label = "AST: "] 
  "1000148" -> "1000149"  [ label = "AST: "] 
  "1000148" -> "1000150"  [ label = "AST: "] 
  "1000152" -> "1000153"  [ label = "AST: "] 
  "1000152" -> "1000154"  [ label = "AST: "] 
  "1000155" -> "1000156"  [ label = "AST: "] 
  "1000155" -> "1000161"  [ label = "AST: "] 
  "1000155" -> "1000173"  [ label = "AST: "] 
  "1000156" -> "1000157"  [ label = "AST: "] 
  "1000156" -> "1000160"  [ label = "AST: "] 
  "1000157" -> "1000158"  [ label = "AST: "] 
  "1000157" -> "1000159"  [ label = "AST: "] 
  "1000161" -> "1000162"  [ label = "AST: "] 
  "1000161" -> "1000167"  [ label = "AST: "] 
  "1000161" -> "1000170"  [ label = "AST: "] 
  "1000162" -> "1000163"  [ label = "AST: "] 
  "1000162" -> "1000166"  [ label = "AST: "] 
  "1000163" -> "1000164"  [ label = "AST: "] 
  "1000163" -> "1000165"  [ label = "AST: "] 
  "1000167" -> "1000168"  [ label = "AST: "] 
  "1000167" -> "1000169"  [ label = "AST: "] 
  "1000170" -> "1000171"  [ label = "AST: "] 
  "1000170" -> "1000172"  [ label = "AST: "] 
  "1000173" -> "1000174"  [ label = "AST: "] 
  "1000174" -> "1000175"  [ label = "AST: "] 
  "1000174" -> "1000178"  [ label = "AST: "] 
  "1000175" -> "1000176"  [ label = "AST: "] 
  "1000175" -> "1000177"  [ label = "AST: "] 
  "1000178" -> "1000179"  [ label = "AST: "] 
  "1000178" -> "1000180"  [ label = "AST: "] 
  "1000181" -> "1000182"  [ label = "AST: "] 
  "1000181" -> "1000187"  [ label = "AST: "] 
  "1000181" -> "1000208"  [ label = "AST: "] 
  "1000182" -> "1000183"  [ label = "AST: "] 
  "1000182" -> "1000186"  [ label = "AST: "] 
  "1000183" -> "1000184"  [ label = "AST: "] 
  "1000183" -> "1000185"  [ label = "AST: "] 
  "1000187" -> "1000188"  [ label = "AST: "] 
  "1000187" -> "1000193"  [ label = "AST: "] 
  "1000187" -> "1000196"  [ label = "AST: "] 
  "1000187" -> "1000199"  [ label = "AST: "] 
  "1000188" -> "1000189"  [ label = "AST: "] 
  "1000188" -> "1000192"  [ label = "AST: "] 
  "1000189" -> "1000190"  [ label = "AST: "] 
  "1000189" -> "1000191"  [ label = "AST: "] 
  "1000193" -> "1000194"  [ label = "AST: "] 
  "1000193" -> "1000195"  [ label = "AST: "] 
  "1000196" -> "1000197"  [ label = "AST: "] 
  "1000196" -> "1000198"  [ label = "AST: "] 
  "1000199" -> "1000200"  [ label = "AST: "] 
  "1000200" -> "1000201"  [ label = "AST: "] 
  "1000200" -> "1000204"  [ label = "AST: "] 
  "1000200" -> "1000207"  [ label = "AST: "] 
  "1000201" -> "1000202"  [ label = "AST: "] 
  "1000201" -> "1000203"  [ label = "AST: "] 
  "1000204" -> "1000205"  [ label = "AST: "] 
  "1000204" -> "1000206"  [ label = "AST: "] 
  "1000208" -> "1000209"  [ label = "AST: "] 
  "1000209" -> "1000210"  [ label = "AST: "] 
  "1000209" -> "1000213"  [ label = "AST: "] 
  "1000210" -> "1000211"  [ label = "AST: "] 
  "1000210" -> "1000212"  [ label = "AST: "] 
  "1000213" -> "1000214"  [ label = "AST: "] 
  "1000213" -> "1000215"  [ label = "AST: "] 
  "1000216" -> "1000217"  [ label = "AST: "] 
  "1000217" -> "1000218"  [ label = "AST: "] 
  "1000217" -> "1000221"  [ label = "AST: "] 
  "1000217" -> "1000224"  [ label = "AST: "] 
  "1000218" -> "1000219"  [ label = "AST: "] 
  "1000218" -> "1000220"  [ label = "AST: "] 
  "1000221" -> "1000222"  [ label = "AST: "] 
  "1000221" -> "1000223"  [ label = "AST: "] 
}
